/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB  &kp ESCAPE      &kp Q  &kp W             &kp E         &kp R         &kp T        &kp Y            &kp U            &kp I        &kp O     &kp P     &kp LBKT  &kp ENTER
         &kp LCTRL       &kp A  &kp S             &kp D         &kp F         &kp G        &kp H            &kp J            &kp K        &kp L     &kp SEMI  &kp SQT
         &kp LEFT_SHIFT  &kp Z  &kp X             &kp C         &kp V         &kp B        &kp N            &kp M            &kp COMMA    &kp DOT   &kp FSLH  &kp BSLH
                                &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_ALT  &lt 1 RET    &lt 1 BACKSPACE  &mt RSHFT SPACE  &lt 2 SPACE  &kp RBKT
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE  &kp UNDER       &kp F1    &kp F2  &kp F3          &kp F4    &kp F5       &kp F6     &kp F7    &kp F8       &kp F9    &kp F10   &kp F11          &kp F12
           &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH        &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR     &kp LPAR  &kp RPAR  &mt RCTRL MINUS
           &mt LALT EQUAL  &kp N1    &kp N2  &kp N3          &kp N4    &kp N5       &kp N6     &kp N7    &kp N8       &kp N9    &kp N0    &trans
                                     &trans  &lt 3 LEFT_ALT  &trans    &trans       &trans     &trans    &lt 3 SPACE  &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans  &trans    &trans  &kp END  &trans           &trans            &trans          &trans    &kp LS(LA(NUMBER_5))  &trans            &kp UP_ARROW  &kp C_VOLUME_UP    &tog 4
        &trans  &kp HOME  &trans  &trans   &kp RIGHT_ARROW  &trans            &trans          &trans    &trans                &trans            &trans        &kp K_MUTE
        &trans  &trans    &trans  &trans   &trans           &kp LEFT_ARROW    &kp DOWN_ARROW  &kp HOME  &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_VOLUME_DOWN
                          &trans  &trans   &trans           &lt 3 RET         &lt 3 ESC       &trans    &trans                &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans       &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &lt 5 LCTRL  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans       &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                             &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans     &trans     &kp END     &trans     &trans      &trans    &trans    &trans             &trans  &kp UP  &trans  &trans
        &trans  &kp HOME   &kp LC(S)  &kp DELETE  &kp RIGHT  &trans      &trans    &trans    &kp LC(BACKSPACE)  &trans  &trans  &trans
        &trans  &kp LC(Z)  &kp LC(C)  &kp LC(V)   &trans     &kp LEFT    &kp DOWN  &kp HOME  &trans             &trans  &trans  &trans
                           &trans     &trans      &trans     &trans      &trans    &trans    &trans             &trans
            >;
        };
    };
};
